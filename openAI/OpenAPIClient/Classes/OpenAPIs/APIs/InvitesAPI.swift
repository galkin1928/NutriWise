//
// InvitesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class InvitesAPI {

    /**
     Delete an invite. If the invite has already been accepted, it cannot be deleted.
     
     - parameter inviteId: (path) The ID of the invite to delete. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deleteInvite(inviteId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InviteDeleteResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return deleteInviteWithRequestBuilder(inviteId: inviteId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete an invite. If the invite has already been accepted, it cannot be deleted.
     - DELETE /organization/invites/{invite_id}
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter inviteId: (path) The ID of the invite to delete. 
     - returns: RequestBuilder<InviteDeleteResponse> 
     */
    open class func deleteInviteWithRequestBuilder(inviteId: String) -> RequestBuilder<InviteDeleteResponse> {
        var localVariablePath = "/organization/invites/{invite_id}"
        let inviteIdPreEscape = "\(APIHelper.mapValueToPathItem(inviteId))"
        let inviteIdPostEscape = inviteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{invite_id}", with: inviteIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InviteDeleteResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Create an invite for a user to the organization. The invite must be accepted by the user before they have access to the organization.
     
     - parameter inviteRequest: (body) The invite request payload. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func inviteUser(inviteRequest: InviteRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Invite?, _ error: Error?) -> Void)) -> RequestTask {
        return inviteUserWithRequestBuilder(inviteRequest: inviteRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create an invite for a user to the organization. The invite must be accepted by the user before they have access to the organization.
     - POST /organization/invites
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter inviteRequest: (body) The invite request payload. 
     - returns: RequestBuilder<Invite> 
     */
    open class func inviteUserWithRequestBuilder(inviteRequest: InviteRequest) -> RequestBuilder<Invite> {
        let localVariablePath = "/organization/invites"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inviteRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Invite>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Returns a list of invites in the organization.
     
     - parameter limit: (query) A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20)
     - parameter after: (query) A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listInvites(limit: Int? = nil, after: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InviteListResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return listInvitesWithRequestBuilder(limit: limit, after: after).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Returns a list of invites in the organization.
     - GET /organization/invites
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter limit: (query) A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20)
     - parameter after: (query) A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional)
     - returns: RequestBuilder<InviteListResponse> 
     */
    open class func listInvitesWithRequestBuilder(limit: Int? = nil, after: String? = nil) -> RequestBuilder<InviteListResponse> {
        let localVariablePath = "/organization/invites"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "after": (wrappedValue: after?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InviteListResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Retrieves an invite.
     
     - parameter inviteId: (path) The ID of the invite to retrieve. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func retrieveInvite(inviteId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Invite?, _ error: Error?) -> Void)) -> RequestTask {
        return retrieveInviteWithRequestBuilder(inviteId: inviteId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieves an invite.
     - GET /organization/invites/{invite_id}
     - Bearer Token:
       - type: http
       - name: ApiKeyAuth
     - parameter inviteId: (path) The ID of the invite to retrieve. 
     - returns: RequestBuilder<Invite> 
     */
    open class func retrieveInviteWithRequestBuilder(inviteId: String) -> RequestBuilder<Invite> {
        var localVariablePath = "/organization/invites/{invite_id}"
        let inviteIdPreEscape = "\(APIHelper.mapValueToPathItem(inviteId))"
        let inviteIdPostEscape = inviteIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{invite_id}", with: inviteIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Invite>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
