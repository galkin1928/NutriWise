//
// RealtimeServerEventErrorError.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Details of the error. */
public struct RealtimeServerEventErrorError: Codable, JSONEncodable, Hashable {

    /** The type of error (e.g., \"invalid_request_error\", \"server_error\"). */
    public var type: String?
    /** Error code, if any. */
    public var code: String?
    /** A human-readable error message. */
    public var message: String?
    /** Parameter related to the error, if any. */
    public var param: String?
    /** The event_id of the client event that caused the error, if applicable. */
    public var eventId: String?

    public init(type: String? = nil, code: String? = nil, message: String? = nil, param: String? = nil, eventId: String? = nil) {
        self.type = type
        self.code = code
        self.message = message
        self.param = param
        self.eventId = eventId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case code
        case message
        case param
        case eventId = "event_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(param, forKey: .param)
        try container.encodeIfPresent(eventId, forKey: .eventId)
    }
}

