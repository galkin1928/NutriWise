//
// RealtimeServerEventRateLimitsUpdatedRateLimitsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RealtimeServerEventRateLimitsUpdatedRateLimitsInner: Codable, JSONEncodable, Hashable {

    /** The name of the rate limit (`requests`, `tokens`). */
    public var name: String?
    /** The maximum allowed value for the rate limit. */
    public var limit: Int?
    /** The remaining value before the limit is reached. */
    public var remaining: Int?
    /** Seconds until the rate limit resets. */
    public var resetSeconds: Double?

    public init(name: String? = nil, limit: Int? = nil, remaining: Int? = nil, resetSeconds: Double? = nil) {
        self.name = name
        self.limit = limit
        self.remaining = remaining
        self.resetSeconds = resetSeconds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case limit
        case remaining
        case resetSeconds = "reset_seconds"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(limit, forKey: .limit)
        try container.encodeIfPresent(remaining, forKey: .remaining)
        try container.encodeIfPresent(resetSeconds, forKey: .resetSeconds)
    }
}

