//
// RealtimeClientEventSessionUpdate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Send this event to update the sessionâ€™s default configuration. The client may send this event at any time to update the session configuration, and any field may be updated at any time, except for \&quot;voice\&quot;. The server will respond with a &#x60;session.updated&#x60; event that shows the full effective configuration. Only fields that are present are updated, thus the correct way to clear a field like \&quot;instructions\&quot; is to pass an empty string. */
public struct RealtimeClientEventSessionUpdate: Codable, JSONEncodable, Hashable {

    /** Optional client-generated ID used to identify this event. */
    public var eventId: String?
    /** The event type, must be \"session.update\". */
    public var type: String
    public var session: RealtimeSession

    public init(eventId: String? = nil, type: String, session: RealtimeSession) {
        self.eventId = eventId
        self.type = type
        self.session = session
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case eventId = "event_id"
        case type
        case session
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(eventId, forKey: .eventId)
        try container.encode(type, forKey: .type)
        try container.encode(session, forKey: .session)
    }
}

